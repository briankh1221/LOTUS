<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gyeonglodang.mybatis.mapper.ManagerMapper">


	<select id="getGonggoList" parameterType="Map" resultType="ManagerDTO">
		SELECT ROW_NUMBER() OVER (ORDER BY idx DESC) AS rownum, a.*
		FROM ( SELECT * FROM part_list
    	WHERE companyIdx = #{companyIdx} AND gonggoidx = #{gonggoidx}
		) a;
	</select>

	<select id="getManager" parameterType="Map"
		resultType="ManagerDTO">
		SELECT * FROM part_list WHERE idx = #{idx}
		and companyIdx = #{companyIdx}
		and gonggoidx = #{gonggoidx}
	</select>
	
	<select id="getCategory" parameterType="Map"
		resultType="String">
		SELECT recruitCateg_categ FROM recruitcateg_board
		where companyIdx = #{companyIdx}
		and noticeControl_idx = #{gonggoidx}
	</select>

	<insert id="insert"
		parameterType="ManagerDTO">
		insert into part_list(companyIdx, gonggoidx, part_list_title,
		announcement_date, announcement_setting)
		values(#{companyIdx}, #{gonggoidx},
		#{part_list_title},#{announcement_date},#{announcement_setting})
	</insert>
	
	<insert id="insertPartField"
		parameterType="Map">
		insert into part_field(companyIdx,gonggoidx,part,fieldidx)
		values(#{companyIdx}, #{gonggoidx},#{part},#{fieldidx})
	</insert>
	
	<insert id="insertPassFailText"
		parameterType="Map">
		insert into pass_fail_text(companyIdx,gonggoidx,part,fieldidx)
		values(#{companyIdx}, #{gonggoidx},#{part},#{fieldidx})
	</insert>

	<select id="part_list_detailForm" parameterType="Map"
		resultType="ManagerDTO">
		select * from part_list where idx = #{idx}
		and companyIdx = #{companyIdx}
		and gonggoidx = #{gonggoidx}
	</select>

	<update id="update"
		parameterType="ManagerDTO">
		update part_list
		set part_list_title = #{part_list_title},
		announcement_date = #{announcement_date},
		announcement_setting = #{announcement_setting}
		where idx = #{idx}
		and companyIdx = #{companyIdx}
		and gonggoidx = #{gonggoidx}
	</update>

	<delete id="delete"
		parameterType="ManagerDTO">
		delete from part_list
		where idx = #{idx}
		and companyIdx = #{companyIdx}
		and gonggoidx = #{gonggoidx}
	</delete>

	<select id="getFaqBoList" resultType="FaqBoardDTO" parameterType="FaqBoardDTO">
		SELECT * FROM faq_board WHERE companyIdx = #{companyIdx}
	</select>

	<insert id="faqInsert"
		parameterType="FaqBoardDTO">
		insert into faq_board(faq_board_title,
		faq_board_context, companyIdx)
		values(#{faq_board_title}, #{faq_board_context}, #{companyIdx})
	</insert>

	<update id="faqUpdate"
		parameterType="FaqBoardDTO">
		update faq_board
		set faq_board_title =
		#{faq_board_title},
		faq_board_context = #{faq_board_context}
		where
		faq_idx = #{faq_idx}
	</update>

	<select id="faqDetailForm" parameterType="int"
		resultType="FaqBoardDTO">
		select * from faq_board where faq_idx = #{faq_idx}
	</select>

	<delete id="faqDelete"
		parameterType="FaqBoardDTO">
		delete from faq_board
		where faq_idx = #{faq_idx}
	</delete>

	<select id="getQnaBoList" parameterType="Map" resultType="QnaBoardDTO">
      SELECT ROW_NUMBER() OVER (ORDER BY idx DESC) AS rownum, a.*
      FROM (
         SELECT * FROM qna_board
      ) a where companyIdx = #{companyIdx}
      LIMIT #{startNum}, 10 
   </select>

	<select id="qnaDetailForm" parameterType="int"
		resultType="QnaBoardDTO">
		select * from qna_board where idx = #{idx}
	</select>

	<select id="qnaSearchViewDetailForm" parameterType="int"
		resultType="QnaBoardDTO">
		select * from qna_board where idx = #{idx}
	</select>
	
	<select id ="getSearchList" parameterType="QnaBoardDTO" resultType="QnaBoardDTO">
		select * from qna_board where recruit_email = #{recruit_email}
	</select>
	
	<select id ="getSearchList2" parameterType="QnaBoardDTO">
		select * from qna_board
	</select>

	<insert id="qnaInsert"
		parameterType="QnaBoardDTO">
		INSERT INTO qna_board (gonggo_list, field_list,
		recruit_name, recruit_email,
		recruit_password, recruit_phonenum,
		qna_title, qna_context,
		qna_registration_date, companyIdx)
		VALUES (#{gonggo_list},
		#{field_list}, #{recruit_name}, #{recruit_email},
		#{recruit_password},
		#{recruit_phonenum}, #{qna_title},
		#{qna_context}, NOW(),
		#{companyIdx})
	</insert>

	<update id="qnaUpdate"
		parameterType="QnaBoardDTO">
		UPDATE qna_board
		SET qna_answer_board =
		#{qna_answer_board}
		WHERE idx = #{idx};
	</update>

	<delete id="qnaDelete"
		parameterType="QnaBoardDTO">
		delete from qna_board
		where idx = #{idx}
	</delete>
	
	<select id="loadqnaidx" resultType="int">
		SELECT idx FROM qna_board
		ORDER BY idx DESC
		LIMIT 1;
	</select>

	<insert id="insertFile" parameterType="QnaFileDTO">
		insert into
		qna_fileupload_table (qna_board_idx, qna_file_path)
		values
		(#{qna_board_idx}, #{qna_file_path})
	</insert>

	<select id="getFileName" parameterType="QnaBoardDTO"
		resultType="QnaFileDTO">
		select * from qna_fileupload_table where qna_board_idx =
		#{idx}
	</select>

	<select id="getQnaListCount" resultType="int">
		select count(*) from
		qna_board
	</select>

 <select id="getJobList"  parameterType="JobNotice_boardDTO">
  	select * from jobnotice_board
  </select>
  
<select id="checkLogin" parameterType="QnaBoardDTO" resultType="QnaBoardDTO">
    SELECT * FROM qna_board
    WHERE recruit_email = #{recruit_email} AND recruit_password = #{recruit_password}
    LIMIT 1
</select>

</mapper>