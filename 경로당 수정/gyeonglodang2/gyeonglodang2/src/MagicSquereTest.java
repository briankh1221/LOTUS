
public class MagicSquereTest {
	public static void main(String[] args) {
//		최초의 1이 채워지는 자리는 2차원 배열의 첫줄 가운데 열이다.
//		마방진에 채워진 숫자가 배열의 차수(n)의 배수이면 다음 숫자는 아랫줄에 채워진다. => 행증가
//		마방진에 채워질 숫자가 배열의 차수(n)의 배수가 아니면 다음 수자는 오른쪽 위 방향에 채워
//		진다 => 행은 1감소 열은 1증가
//		행이 배열의 범위를 벗어나면 마지막 행으로 수정을 하고 열이 배열의 볌위를 벗어나면 
//		첫번째 열로 수저한다.
		
		int[][] a = new int[5][5];
		
//		마방진 구현할 배열이 5행 5열일 경우 최초의 "1"이 채워질 위치를 정한다.
		int i = 0, j = 2; // i는 행 인덱스 / j는 열 인덱스
		
//		마방진에 채워질 숫자의 개수만큼 반복하며 마방진을 완성한다.
		for(int k=1; k<=25; k++) {
//			마방진에 숫자를 채운다.
			a[i][j] = k;
			
			if(k % 5 == 0) {
				i++;
				
			}else { // 마방진에 채운 숫자가 5의 배수가 아니면 다음 숫자는 오른쪽 위 방향
//				행이 배열의 범위를 벗어나면 마지막 행으로 이동한다.
				if(--i == -1) {
					i = 4;
				}
//				열이 배열의 범위를 벗어나면 첫번째 열로 이동한다.
				if(++j == 5) {
					j = 0;
				}
				
			}
		}
		for(i=0; i<a.length; i++) {
			for(j = 0; j<a[i].length; j++) {
				System.out.printf("%3d ", a[i][j]);
			}
			System.out.println();
		}
		
	}

}
